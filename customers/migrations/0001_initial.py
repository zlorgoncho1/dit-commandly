# Generated by Django 5.2.5 on 2025-08-21 20:07

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "customer_type",
                    models.CharField(
                        choices=[
                            ("individual", "Particulier"),
                            ("company", "Entreprise"),
                        ],
                        default="individual",
                        max_length=10,
                        verbose_name="Type de client",
                    ),
                ),
                ("first_name", models.CharField(max_length=50, verbose_name="Prénom")),
                ("last_name", models.CharField(max_length=50, verbose_name="Nom")),
                (
                    "company_name",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Nom de l'entreprise",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Numéro de téléphone invalide",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                        verbose_name="Téléphone",
                    ),
                ),
                (
                    "address_line1",
                    models.CharField(max_length=255, verbose_name="Adresse ligne 1"),
                ),
                (
                    "address_line2",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Adresse ligne 2",
                    ),
                ),
                ("city", models.CharField(max_length=100, verbose_name="Ville")),
                (
                    "postal_code",
                    models.CharField(max_length=10, verbose_name="Code postal"),
                ),
                (
                    "country",
                    models.CharField(
                        default="France", max_length=100, verbose_name="Pays"
                    ),
                ),
                (
                    "tax_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Numéro de TVA",
                    ),
                ),
                (
                    "ninea",
                    models.CharField(
                        blank=True,
                        max_length=14,
                        null=True,
                        verbose_name="Numéro NINEA",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Client actif"),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=100, unique=True, verbose_name="Slug"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Dernière modification"
                    ),
                ),
            ],
            options={
                "verbose_name": "Client",
                "verbose_name_plural": "Clients",
                "ordering": ["-created_at"],
            },
        ),
    ]
